version: "3"

services:
  web:
    container_name: "web"
    build: nginx
    ports:
      - "8000:80"
    volumes:
      - ./app/conf.d:/etc/nginx/conf.d
      - static_files:/home/app/staticfiles
    networks:
      - django_network
    depends_on:
      - backend

  celery:
    build: ./backend
    container_name: "celery"
    command: celery --app=config worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./backend:/usr/src/app
    env_file:
      - backend/.env
    depends_on:
      - backend
      - redis
    networks:
      - django_network

  backend:
    build: backend
    container_name: "backend"
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    restart: unless-stopped
    volumes:
      - ./backend:/usr/src/app/
      - static_files:/usr/src/app/staticfiles
    env_file:
      - backend/.env
    expose:
      - 8000
    depends_on:
      - db
      - redis
    networks:
      - django_network

  db:
    build: db
    restart: always
    container_name: "db"
    env_file:
      - backend/.env
    ports:
      - "5433:5432"
    networks:
      - django_network

  redis:
    image: "redis:5-alpine"
    container_name: "redis"
    networks:
      - django_network

networks:
  django_network:
    driver: bridge

volumes:
  static_files:
